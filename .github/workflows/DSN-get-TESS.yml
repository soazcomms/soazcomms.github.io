name: DSN-getTESS Data

on:
  schedule:
    - cron: '0 8 1 * *'  # Runs at 08:00 UTC on the 1st day of each month
  workflow_dispatch:  # Allows manual triggering

env:
  TESSTABLE_CSV: "DSNdata/TESStable.csv"
  LOG_FILE: "DSNdata/TESSdownloaded.log"

jobs:
  process-stars-files:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tess-ida-tools pandas
          pip install lica

      - name: Ensure Log File Exists
        run: |
          touch "$LOG_FILE"

      - name: Read TESStable.csv and process starsXXXX files
        env:
          IDA_URL: ${{ secrets.IDA_URL }}
        run: |
          export IDA_URL=${{ secrets.IDA_URL }}
          if [ ! -f "$TESSTABLE_CSV" ]; then
            echo "Error: TESStable.csv not found!" >&2
            exit 1
          fi

          echo "Processing each site in $TESSTABLE_CSV..."

          # Compute the previous month in YYYY-MM format
          PREV_MONTH=$(date --date="$(date +%Y-%m-01) last month" +%Y-%m)
          # TEMPORARY PATCH
          PREV_MONTH="2025-06"
          echo "Process previous month: $PREV_MONTH"
          #
          while IFS=, read -r site_name sequence alias; do
            if [[ -z "$site_name" || "$site_name" == "Site" ]]; then
              continue
            fi
            suffix="${alias: -4}" # Extract last 4 chars of starsXXXX
            echo "Processing $alias -> $site_name"
            # Download data using tess-ida-get
            tess-ida-get range -n "$alias" -s "$PREV_MONTH" -o "DSNdata/NEW"
            # Move files and rename them
            if [ -d "DSNdata/NEW/$alias" ]; then
              for file in DSNdata/NEW/$alias/*; do
                [ -e "$file" ] || continue  # Skip if no files exist
                tail=$(echo "$file" | awk -F"." '{print substr($1, length($1)-8, 9)}') 
                new_label=$site_name"_"$tail".dat"
                mv $file DSNdata/NEW/$new_label
                echo "$file" >> "$LOG_FILE"
              done
              rm -rf "DSNdata/NEW/$alias"  # Remove empty directory
            fi
          done < $TESSTABLE_CSV

      - name: Commit changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add DSNdata/NEW/*
          git commit -m "Processed TESS data for $PREV_MONTH and updated DSNdata/NEW" || echo "No changes to commit"
          git push
