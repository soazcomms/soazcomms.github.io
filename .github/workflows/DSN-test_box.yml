name: DSN test upload to Box
# Trigger the workflow on a schedule (in production mode)
on:
  workflow_dispatch:
#  schedule:
#    - cron: '0 17 * * 0-7'  # Runs every day at 17:00 UTC
#  push:
#    branches:
#      - main  # Trigger on push to the 'main' branch
#  pull_request:
#    branches:
#      - main
env:
  INFLUX_TOKEN: ${{ secrets.INFLUX_TOKEN1 }}
  BOX_CONFIG: ${{ secrets.BOX_CONFIG }}
  BOX_PATH: "DSNdata/BOX/"
  MERGE_PATH: "DSNdata/MERGE/"
  BOX_ARCHIVE_ID: "304428997491"

jobs:
  process_and_upload:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Repository, get python
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libgtk-3-dev libc-bin curl
          pip install --upgrade pip
          pip install -r requirements.txt

      # Step 7: Install Box CLI
      - name: Install Box CLI
        run: |
          echo "Installing Box CLI via npm..."
          sudo apt-get update
          sudo apt-get install -y libsecret-1-dev
          npm install -g @box/cli
          box --version

      # Step 8: Boxing...
      - name: Upload Files to Box
        run: |
          echo "$BOX_CONFIG" > box_config.json
          echo "BOX_PATH is set to: ${BOX_PATH}"

          if [ -d "$BOX_PATH" ] && [ "$(ls -A $BOX_PATH)" ]; then
            IN_FILES=$(ls -1 "${BOX_PATH}")
          else
            echo "Warning: No files found in ${BOX_PATH}"
            IN_FILES=""
          fi
          echo "Configure and upload to Box."
          box configure:environments:add box_config.json -n "github-box"
          box folders:items $BOX_ARCHIVE_ID --csv > results.csv

          echo "++++++++++ IN_FILES: "$IN_FILES" in ${BOX_PATH}"
          for file in $IN_FILES; do
            box_file="$BOX_PATH$file"
            raw_file="${file/-[0-9][0-9]/}"
            cp $box_file $raw_file
            echo "Trying to box $box_file"

            # Extract Box File ID from CSV
            box_ID=$(awk -F ',' -v fname="$raw_file" 'NR > 1 && $9 == fname {print $2}' results.csv)
            echo "Extracted Box ID: '$box_ID'"

            if [ -z "$box_ID" ] || [ "$box_ID" == "null" ]; then
              echo "❌ File $raw_file not found in Box, upload it"
              box files:upload "$raw_file" -p $BOX_ARCHIVE_ID -y
              echo "Waiting for file upload to complete..."
              ATTEMPTS=0
              while [ $ATTEMPTS -lt 10 ]; do
                sleep 5  # Wait 5 seconds before checking again
                box_ID_CHECK=$(box search "$raw_file" --csv | awk -F ',' 'NR>1 {print $1}') 
                if [ -n "$box_ID_CHECK" ]; then
                  echo "✅ File successfully uploaded to Box."
                  break
                fi
                ATTEMPTS=$((ATTEMPTS+1))
                echo "🔄 Waiting for file upload ($ATTEMPTS)..."
              done
            else
              echo "✅ Found Box File ID: $box_ID"
              box files:download "$box_ID" --destination $MERGE_PATH -y
              echo "Downloaded $box_ID"
              python DSN-box_merge.py "$MERGE_PATH$raw_file" "$raw_file"
              box files:delete $box_ID -f -y
              echo "Waiting for file deletion to complete..."
              ATTEMPTS=0
              while [ $ATTEMPTS -lt 10 ]; do
                sleep 5  # Wait 5 seconds before checking again
                box_ID_CHECK=$(box search "$raw_file" --csv | awk -F ',' 'NR>1 {print $1}') 
                if [ -z "$box_ID_CHECK" ] || [ "$box_ID_CHECK" == "null" ]; then
                  echo "✅ File successfully deleted from Box."
                  break
                fi
                ATTEMPTS=$((ATTEMPTS+1))
                echo "🔄 Waiting for file removal ($ATTEMPTS)..."
              done
              echo "Uploading MERGED $raw_file to Box..."
              box files:upload "$MERGE_PATH$raw_file" -p $BOX_ARCHIVE_ID -y
            fi
          done
