name: DSN_analysis

on:
  repository_dispatch:
    types: [DSN_analysis]

  workflow_dispatch:
    inputs:
      from:
        description: 'Start time (UTC, ISO format)'
        required: true
      to:
        description: 'End time (UTC, ISO format)'
        required: true
      label:
        description: 'DSN label (e.g. DSN014-S)'
        required: true

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  BOX_CONFIG: ${{ secrets.BOX_CONFIG }}
  BOX_PATH: DSNdata/BOX_ANALYSIS/
  BOX_ARCHIVE_ID: "304428997491"
  LABEL: ${{ github.event.inputs.label || github.event.client_payload.label }}
  FROM: ${{ github.event.inputs.from || github.event.client_payload.from }}
  TO: ${{ github.event.inputs.to || github.event.client_payload.to }}

jobs:
  show-parameters:
    runs-on: ubuntu-latest
    steps:
      - name: Show parameters
        run: |
          echo "Label: ${{ env.LABEL }}"
          echo "From:  ${{ env.FROM }}"
          echo "To:    ${{ env.TO }}"

  generate-plots:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo (pin ref)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.ref || 'main' }}
          fetch-depth: 1

      - name: Show what we will run
        run: |
          echo "HEAD: $(git rev-parse HEAD)"
          ls -la .
          sed -n '150,175p' DSN_generate_analysis.py || true

      - name: Install Required Packages
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Set up Python explicitly
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Confirm Python version
        run: |
          which python
          python --version
          ls -l $(which python)

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Box CLI
        run: |
          echo "Installing Box CLI via npm..."
          sudo apt-get update
          sudo apt-get install -y libsecret-1-dev
          npm install -g @box/cli
          box --version

      - name: Download Files from Box if needed
        run: |
          echo "$BOX_CONFIG" > box_config.json
          box configure:environments:add box_config.json -n "github-box"
          box folders:items $BOX_ARCHIVE_ID --csv > results.csv
          echo "+++++=Label $LABEL"
          BOX_FILES=$(awk -F',' -v label="$LABEL" '$0 ~ label { print $NF }' results.csv)
          echo "BOX_FILES: $BOX_FILES"
          LOC_FILES=$(ls -p "$BOX_PATH" | grep -v '/$' | grep "$LABEL" || true)
          echo "LOC_FILES: $LOC_FILES"
          loc_tmp=$(mktemp)
          box_tmp=$(mktemp)
          echo "$LOC_FILES" | sort > "$loc_tmp"
          echo "$BOX_FILES" | sort > "$box_tmp"
          MIS_FILES=$(comm -23 "$box_tmp" "$loc_tmp")
          if [ -z "$MIS_FILES" ]; then
            echo "✅ All files in ${BOX_PATH}. Skip Box download."
            exit 0
          fi
          echo "++++++++++ MIS_FILES: $MIS_FILES in ${BOX_PATH}"
          for box_file in $MIS_FILES; do
            box folders:items $BOX_ARCHIVE_ID --csv > results.csv
            box_ID=$(awk -F ',' -v fname="$box_file" 'NR > 1 && $9 == fname {print $2}' results.csv)
            echo "⬇️⬇️⬇️ Download Box File ID: $box_ID"
            box files:download "$box_ID" --destination "$BOX_PATH" -y
            echo "✅✅✅ Downloaded $box_ID"
          done

      - name: Generate analysis dashboard
        run: |
          # The full Monty:
          python DSN_generate_analysis.py \
            --input_dir "$BOX_PATH" \
            --from "$FROM" \
            --to "$TO" \
            --label "$LABEL"
          CURRENT_DATE=$(date -u)
          echo "$CURRENT_DATE Created analysis plots." >> DSNdata/RUN_LOG

      - name: Show generated analysis outputs
        run: |
          set -e
          ls -la "analysis/${LABEL}" || { echo "❌ No outputs in analysis/${LABEL}"; exit 1; }
          echo "== HTML files =="
          ls -1 "analysis/${LABEL}"/*.html || true
          echo "== PNG files =="
          ls -1 "analysis/${LABEL}"/*.png  || true

      # Check out gh-pages into a SEPARATE folder so we don't clobber the main checkout
      - name: Checkout gh-pages into ./ghp
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: ghp
          fetch-depth: 1
          clean: true

      - name: Copy analysis to gh-pages
        run: |
          set -e
          mkdir -p "ghp/analysis/${LABEL}" "ghp/status"
          # Replace ONLY this label's folder (keep other labels intact)
          rm -rf "ghp/analysis/${LABEL}"
          mkdir -p "ghp/analysis/${LABEL}"
          cp -f "analysis/${LABEL}/"*.html "ghp/analysis/${LABEL}/" 2>/dev/null || true
          cp -f "analysis/${LABEL}/"*.png  "ghp/analysis/${LABEL}/" 2>/dev/null || true

          # Cache-busted status JSON pointing at the combined page
          ts="${{ github.run_id }}"
          cat > "ghp/status/status-${LABEL}.json" <<EOF
          {
            "status": "✅ Analysis complete!",
            "html": "analysis/${LABEL}/${LABEL}.analysis.html?t=${ts}",
            "timestamp": $(date +%s),
            "run_id": "${{ github.run_id }}"
          }
          EOF

      - name: Commit & push to gh-pages
        run: |
          set -e
          cd ghp
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "analysis/${LABEL}" "status/status-${LABEL}.json"
          git commit -m "Publish analysis for ${LABEL} (run ${{ github.run_id }})" || echo "ℹ️ Nothing to commit"
          git push origin gh-pages
  
      - name: Commit Other Changes to Repository
        run: |
          echo "Checking for changes in DSNdata/BOX_ANALYSIS..."

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Stage BOX_ANALYSIS and RUN_LOG
          git add DSNdata/BOX_ANALYSIS DSNdata/RUN_LOG 2>/dev/null || true

          STAGED=$(git diff --cached --name-only)
          if [ -z "$STAGED" ]; then
            echo "✅ No staged changes to commit."
            exit 0
          else
            git commit -m "Updated DSNdata/{BOX_ANALYSIS,RUN_LOG}"
            git push
          fi
